@model IEnumerable<sama.Models.EndpointViewModel>

@{
    ViewData["Title"] = "Endpoints";
    var states = (IReadOnlyDictionary<sama.Models.Endpoint, sama.Services.StateService.EndpointState>)ViewData["CurrentStates"];
}

<h2>Endpoints</h2>

<p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>Status</th>
            <th>
                @Html.DisplayNameFor(model => model.Enabled)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>Kind</th>
            <th>Details</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        var state = states.FirstOrDefault(kvp => kvp.Key.Id == item.Id).Value ?? new sama.Services.StateService.EndpointState();

                        if (state.IsUp == true)
                        {
                            <span class="label label-success" title="as of @state.LastUpdated.ToLocalTime().ToString("g")">Up</span>
                        }
                        else if (state.IsUp == false)
                        {
                            <span class="label label-danger" title="as of @state.LastUpdated.ToLocalTime().ToString("g")">Down</span>
                        }
                        else
                        {
                            <span class="label label-default">N/A</span>
                        }
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Enabled)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @item.KindString
                </td>
                <td>
                    @if (item.Kind == sama.Models.Endpoint.EndpointKind.Http)
                    {
                        var httpEndpoint = (sama.Models.HttpEndpointViewModel)item;
                        <span>@httpEndpoint.Location</span>
                        @if (!string.IsNullOrWhiteSpace(httpEndpoint.ResponseMatch))
                        {
                            <i>matching</i>
                            <code>@httpEndpoint.ResponseMatch</code>
                        }
                    }
                    else if (item.Kind == sama.Models.Endpoint.EndpointKind.Icmp)
                    {
                        var icmpEndpoint = (sama.Models.IcmpEndpointViewModel)item;
                        <span>@icmpEndpoint.Address</span>
                    }
                    else
                    {
                        <span>UNKNOWN</span>
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-xs">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-xs">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-xs">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
